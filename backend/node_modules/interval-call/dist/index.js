"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function intervalCall(interval = 1000, options) {
    let globalElapsed = true;
    return fn => {
        // interval 시간 안에 다시 호출된 함수 콜은 무시한다
        let elapsed = true;
        return function (...args) {
            var _a, _b, _c;
            if (((_a = options) === null || _a === void 0 ? void 0 : _a.useRootContext) ? !globalElapsed : !elapsed) {
                if ((_b = options) === null || _b === void 0 ? void 0 : _b.logCancelMessage) {
                    const fnName = (fn.name || 'anonymous function');
                    console.warn('`' + fnName + '` is canceled by intervalCall');
                }
                return; // 마지막 호출 후 제한된 경과시간이 지나지 않은 경우 리턴
            }
            if ((_c = options) === null || _c === void 0 ? void 0 : _c.useRootContext) {
                globalElapsed = false;
            }
            else {
                elapsed = false;
            }
            setTimeout(() => {
                var _a;
                if ((_a = options) === null || _a === void 0 ? void 0 : _a.useRootContext) {
                    globalElapsed = true;
                }
                else {
                    elapsed = true;
                }
            }, interval);
            return fn.call(this, ...args);
        };
    };
}
exports.default = intervalCall;
//# sourceMappingURL=index.js.map